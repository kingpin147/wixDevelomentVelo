// Velo API Reference: https://www.wix.com/velo/reference/api-overview/introduction
import { aiCompletion } from 'backend/ChatGPTInegration.jsw';
import wixWindow from 'wix-window';
import { getImages } from 'backend/PixabayVersuchIntegartionALA.jsw';
import { getImage } from 'backend/PixabayVersuchIntegartionALA.jsw';

$w.onReady(function () {
    let chatArray = [];
    $w("#askButton").enable();

    const askQuestion = async () => {
        $w("#loadingSpinner").show();
        const user_prompt = $w("#promptInput").value;
        const language = $w('#languageDropdown').value;
        console.log({ "role": "user", "content": `Here is the clients question: ${user_prompt}. Answer the question in ${language}` })
        chatArray.push({ "role": "user", "content": `Here is the clients question: ${user_prompt}. Answer the question in ${language}` })
        console.log(chatArray)
        const answer = await aiCompletion(chatArray);
        
        $w('#answerBox').value = answer + "\n\nViele Spaß bei Ihrer Reise und liebe Grüße,\n\nIhr Ki-Urlaub.de-Team\n\n";
        let words = answer.split(" ");
        console.log(words, "words")
        let firstWord = words[0]
        let secondWord = words[1]
        let location = `${firstWord}+${secondWord}`
        console.log(location, "location")
        var textBoxLocation = $w('#location').value;
        const res = await getImages(location);
        const imgSrc = res[0].largeImageURL;
        console.log(imgSrc, "img")
       $w('#column2').background.src = imgSrc;
        
        chatArray.push({ "role": "assistant", "content": `${answer}.` })
        console.log(answer)
         

        $w('#loadingSpinner').hide();
    };

    $w("#captcha").onVerified(() => {
        $w("#askButton").enable();
        $w('#captcha').collapse();
    })
    $w('#askButton').onClick(askQuestion);
});

export function lightboxButton_click(event) {
    const dataToSend = {
        generation: $w('#answerBox').value,
        question: $w('#promptInput').value
    };
    wixWindow.openLightbox("Ki-Vorschlag merken", dataToSend);
}

export async function askButton_click(event) {
    var location = $w('#location').value;
    const res = await getImages(location);
    const imgSrc = res[0];

    $w('#column2').background.src = imgSrc;
}


///////////////////


import { fetch } from 'wix-fetch';
import { getSecret } from 'wix-secrets-backend';


export const getImages = async (destination) => {
    const axios = require('axios');
    const APIKEY = await getSecret("PIXABAY_API_KEY1");
    console.log(destination, "request")
    let config = {
        method: 'get',
        maxBodyLength: Infinity,
        url: `https://pixabay.com/api/?key=${APIKEY}&q=${destination}&image_type=photo`,
        headers: {}
    };

    return await axios.request(config)
        .then((response) => {
            console.log(JSON.stringify(response.data));
            return response.data.hits
        })
        .catch((error) => {
            console.log(error);
            return error
        });

}

export const getImage = async (destination) => {
  const axios = require('axios');
  const APIKEY = await getSecret("PIXABAY_API_KEY1");
  var words = destination.split(' ');
  if (words.length < 2) {
    console.error('Invalid destination:', destination);
    return null;
  }
  var word0 = words[0];
  var word1 = words[1];
  let result = word0.concat("+", word1);
  console.log('Search query:', result);

  let config = {
    method: 'get',
    maxBodyLength: Infinity,
    url: `https://pixabay.com/api/?key=${APIKEY}&q=${result}&image_type=photo`,
    headers: {}
  };

  try {
    const response = await axios.request(config);
    console.log('API response:', JSON.stringify(response.data));
    return response.data.hits;
  } catch (error) {
    console.error('API request error:', error);
    return null;
  }
};



///////////////////////


 import { fetch } from 'wix-fetch';
import { getSecret } from 'wix-secrets-backend';



export const aiCompletion = async (chatArray) => {
  chatArray = chatArray || []; // Initialize chatArray as an empty array if it's null 
  //The error you're encountering is likely due to the fact that you're attempting to call the push method on the chatArray without initializing it as an array.
  // To resolve this error, you can modify your code as follows:
  const url = "https://api.openai.com/v1/chat/completions";
  const APIKEY = await getSecret("OPENAI_API_KEY3");
  chatArray.push(    
    { "role":"system", "content": "First task is to reset the context. You are a multi-lingual assistant for clients in an international travel and tourism company based in Europe, but you have vacation offers for all countries, where your main task is to recommend vacation destinations to your customers with a maximum of 150 words as enumeration. The recommendations have to be affordable for the majority of travelers. Important task is that before you begin with the answer you state the travel destination in square brackets. Answer 100% honestly. Finally, give a recommendation that a travel professional who knows the destination very well would give. Clients will ask you all sorts of questions about different vacation destinations and you give them the best possible answer you can. Answer in the same language in which the question was asked" },
  );
  const messages = chatArray;
  const body = {
     "model": "gpt-3.5-turbo",
     "messages": messages,
     "max_tokens": 600,
     "temperature": 0.20,  //  before tempreture is 0.70 but if tempreture is higher then output is more abnormal, so low tempreture is best for quick results 
 };
  const options = {
    method: "POST",
    headers: {
      'Content-Type': "application/json",
      'Authorization': `Bearer ${APIKEY}`
    },
    body: JSON.stringify(body),
  };
  const response = await fetch(url, options);
  //console.log(response)
  const data = await response.json();
  //console.log(data)
  console.log(data.choices[0].message.content)
  const final = data.choices[0].message.content;
  console.log("final", final)
  return final;
};